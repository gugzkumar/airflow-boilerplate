version: '2.1'
services:

    # postgres:
    #     image: postgres:9.6
    #     environment:
    #         - POSTGRES_USER=${POSTGRES_USER}
    #         - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    #         - POSTGRES_DB=${POSTGRES_DB}
    #     volumes:
    #       - airflow-volume:/var/lib/postgresql/data
    #     ports:
    #       - "5432:5432"

    airflow-webserver:
        build: ./airflow
        # restart: always
        # depends_on:
        #     - postgres
        environment:
            - ENVIRONMENT=local
            - LOAD_EX=n
            - EXECUTOR=Sequential
            - AIRFLOW__CORE__STORE_SERIALIZED_DAGS=True
            - AIRFLOW__WEBSERVER__DAG_DEFAULT_VIEW=graph
            # AWS Secrets
            - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
            - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
            - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
            # Slack Secrets
            - SLACK_OAUTH_TOKEN=${SLACK_OAUTH_TOKEN}
            # AWS Fargate Concurrency
            - TASK_DEF=${TASK_DEF}
            - TASK_SUBNET=${TASK_SUBNET}
            - FARGATE_CLUSTER=${FARGATE_CLUSTER}
            - S3_BUCKET=${S3_BUCKET}
        volumes:
            - ./airflow/dags:/opt/airflow/dags
            - ./airflow/plugins:/opt/airflow/plugins
            - ./airflow/utils:/opt/airflow/utils
            - /var/run/docker.sock:/opt/airflow/docker.sock
            - ./.kubernetes/config:/opt/airflow/.kube/config
        ports:
            - "8080:8080"
        command: bash -c "sh startup.sh"

    api:
        build: ./api
        volumes:
          - ./api:/app
        ports:
          - "3000:3000"
